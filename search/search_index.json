{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to daylight_timelapse \u00b6 Create a daylight spanning timelapser using the async_app package Free software: MIT License Documentation: https://jneines.github.io/daylight_timelapse Features \u00b6 TODO","title":"Home"},{"location":"#welcome-to-daylight_timelapse","text":"Create a daylight spanning timelapser using the async_app package Free software: MIT License Documentation: https://jneines.github.io/daylight_timelapse","title":"Welcome to daylight_timelapse"},{"location":"#features","text":"TODO","title":"Features"},{"location":"changelog/","text":"Changelog \u00b6 v0.0.1 - Date \u00b6 Improvement : TBD New Features : TBD","title":"Changelog"},{"location":"changelog/#changelog","text":"","title":"Changelog"},{"location":"changelog/#v001-date","text":"Improvement : TBD New Features : TBD","title":"v0.0.1 - Date"},{"location":"contributing/","text":"Contributing \u00b6 Contributions are welcome, and they are greatly appreciated! Every little bit helps, and credit will always be given. You can contribute in many ways: Types of Contributions \u00b6 Report Bugs \u00b6 Report bugs at https://github.com/jneines/daylight_timelapse/issues . If you are reporting a bug, please include: Your operating system name and version. Any details about your local setup that might be helpful in troubleshooting. Detailed steps to reproduce the bug. Fix Bugs \u00b6 Look through the GitHub issues for bugs. Anything tagged with bug and help wanted is open to whoever wants to implement it. Implement Features \u00b6 Look through the GitHub issues for features. Anything tagged with enhancement and help wanted is open to whoever wants to implement it. Write Documentation \u00b6 daylight_timelapse could always use more documentation, whether as part of the official daylight_timelapse docs, in docstrings, or even on the web in blog posts, articles, and such. Submit Feedback \u00b6 The best way to send feedback is to file an issue at https://github.com/jneines/daylight_timelapse/issues . If you are proposing a feature: Explain in detail how it would work. Keep the scope as narrow as possible, to make it easier to implement. Remember that this is a volunteer-driven project, and that contributions are welcome :) Get Started! \u00b6 Ready to contribute? Here's how to set up daylight_timelapse for local development. Fork the daylight_timelapse repo on GitHub. Clone your fork locally: 1 $ git clone git@github.com:your_name_here/daylight_timelapse.git Install your local copy into a virtualenv. Assuming you have virtualenvwrapper installed, this is how you set up your fork for local development: 1 2 3 $ mkvirtualenv daylight_timelapse $ cd daylight_timelapse/ $ python setup.py develop Create a branch for local development: 1 $ git checkout -b name-of-your-bugfix-or-feature Now you can make your changes locally. When you're done making changes, check that your changes pass flake8 and the tests, including testing other Python versions with tox: 1 2 3 $ flake8 daylight_timelapse tests $ python setup.py test or pytest $ tox To get flake8 and tox, just pip install them into your virtualenv. Commit your changes and push your branch to GitHub: 1 2 3 $ git add . $ git commit -m \"Your detailed description of your changes.\" $ git push origin name-of-your-bugfix-or-feature Submit a pull request through the GitHub website. Pull Request Guidelines \u00b6 Before you submit a pull request, check that it meets these guidelines: The pull request should include tests. If the pull request adds functionality, the docs should be updated. Put your new functionality into a function with a docstring, and add the feature to the list in README.rst. The pull request should work for Python 3.8 and later, and for PyPy. Check https://github.com/jneines/daylight_timelapse/pull_requests and make sure that the tests pass for all supported Python versions.","title":"Contributing"},{"location":"contributing/#contributing","text":"Contributions are welcome, and they are greatly appreciated! Every little bit helps, and credit will always be given. You can contribute in many ways:","title":"Contributing"},{"location":"contributing/#types-of-contributions","text":"","title":"Types of Contributions"},{"location":"contributing/#report-bugs","text":"Report bugs at https://github.com/jneines/daylight_timelapse/issues . If you are reporting a bug, please include: Your operating system name and version. Any details about your local setup that might be helpful in troubleshooting. Detailed steps to reproduce the bug.","title":"Report Bugs"},{"location":"contributing/#fix-bugs","text":"Look through the GitHub issues for bugs. Anything tagged with bug and help wanted is open to whoever wants to implement it.","title":"Fix Bugs"},{"location":"contributing/#implement-features","text":"Look through the GitHub issues for features. Anything tagged with enhancement and help wanted is open to whoever wants to implement it.","title":"Implement Features"},{"location":"contributing/#write-documentation","text":"daylight_timelapse could always use more documentation, whether as part of the official daylight_timelapse docs, in docstrings, or even on the web in blog posts, articles, and such.","title":"Write Documentation"},{"location":"contributing/#submit-feedback","text":"The best way to send feedback is to file an issue at https://github.com/jneines/daylight_timelapse/issues . If you are proposing a feature: Explain in detail how it would work. Keep the scope as narrow as possible, to make it easier to implement. Remember that this is a volunteer-driven project, and that contributions are welcome :)","title":"Submit Feedback"},{"location":"contributing/#get-started","text":"Ready to contribute? Here's how to set up daylight_timelapse for local development. Fork the daylight_timelapse repo on GitHub. Clone your fork locally: 1 $ git clone git@github.com:your_name_here/daylight_timelapse.git Install your local copy into a virtualenv. Assuming you have virtualenvwrapper installed, this is how you set up your fork for local development: 1 2 3 $ mkvirtualenv daylight_timelapse $ cd daylight_timelapse/ $ python setup.py develop Create a branch for local development: 1 $ git checkout -b name-of-your-bugfix-or-feature Now you can make your changes locally. When you're done making changes, check that your changes pass flake8 and the tests, including testing other Python versions with tox: 1 2 3 $ flake8 daylight_timelapse tests $ python setup.py test or pytest $ tox To get flake8 and tox, just pip install them into your virtualenv. Commit your changes and push your branch to GitHub: 1 2 3 $ git add . $ git commit -m \"Your detailed description of your changes.\" $ git push origin name-of-your-bugfix-or-feature Submit a pull request through the GitHub website.","title":"Get Started!"},{"location":"contributing/#pull-request-guidelines","text":"Before you submit a pull request, check that it meets these guidelines: The pull request should include tests. If the pull request adds functionality, the docs should be updated. Put your new functionality into a function with a docstring, and add the feature to the list in README.rst. The pull request should work for Python 3.8 and later, and for PyPy. Check https://github.com/jneines/daylight_timelapse/pull_requests and make sure that the tests pass for all supported Python versions.","title":"Pull Request Guidelines"},{"location":"daylight_timelapse/","text":"daylight_timelapse component \u00b6 Main module.","title":"daylight_timelapse component"},{"location":"daylight_timelapse/#daylight_timelapse-component","text":"Main module.","title":"daylight_timelapse component"},{"location":"faq/","text":"FAQ \u00b6","title":"FAQ"},{"location":"faq/#faq","text":"","title":"FAQ"},{"location":"installation/","text":"Installation \u00b6 Stable release \u00b6 To install daylight_timelapse, run this command in your terminal: 1 pip install daylight_timelapse This is the preferred method to install daylight_timelapse, as it will always install the most recent stable release. If you don't have pip installed, this Python installation guide can guide you through the process. From sources \u00b6 To install daylight_timelapse from sources, run this command in your terminal: 1 pip install git+https://github.com/jneines/daylight_timelapse","title":"Installation"},{"location":"installation/#installation","text":"","title":"Installation"},{"location":"installation/#stable-release","text":"To install daylight_timelapse, run this command in your terminal: 1 pip install daylight_timelapse This is the preferred method to install daylight_timelapse, as it will always install the most recent stable release. If you don't have pip installed, this Python installation guide can guide you through the process.","title":"Stable release"},{"location":"installation/#from-sources","text":"To install daylight_timelapse from sources, run this command in your terminal: 1 pip install git+https://github.com/jneines/daylight_timelapse","title":"From sources"},{"location":"photo_store/","text":"photo_store component \u00b6","title":"photo_store component"},{"location":"photo_store/#photo_store-component","text":"","title":"photo_store component"},{"location":"usage/","text":"Usage \u00b6 To use daylight_timelapse in a project: 1 import daylight_timelapse","title":"Usage"},{"location":"usage/#usage","text":"To use daylight_timelapse in a project: 1 import daylight_timelapse","title":"Usage"},{"location":"video_store/","text":"video_store component \u00b6 run_command ( record ) async \u00b6 The central dispatcher for command records. Source code in daylight_timelapse/video_store.py async def run_command ( record ): \"\"\"The central dispatcher for command records.\"\"\" command = record [ \"command\" ] camera_name = record [ \"camera_name\" ] if command == \"start\" : logger . info ( \"Start requested\" ) await start_video_processor ( camera_name ) elif command == \"stop\" : logger . info ( \"Stop requested\" ) await stop_video_processor ( camera_name ) elif command == \"add_image\" : logger . info ( \"add_image requested.\" ) await add_image ( record ) else : logger . warning ( f \"Ignoring unknown command { command } \" )","title":"video_store component"},{"location":"video_store/#video_store-component","text":"","title":"video_store component"},{"location":"video_store/#daylight_timelapse.video_store.run_command","text":"The central dispatcher for command records. Source code in daylight_timelapse/video_store.py async def run_command ( record ): \"\"\"The central dispatcher for command records.\"\"\" command = record [ \"command\" ] camera_name = record [ \"camera_name\" ] if command == \"start\" : logger . info ( \"Start requested\" ) await start_video_processor ( camera_name ) elif command == \"stop\" : logger . info ( \"Stop requested\" ) await stop_video_processor ( camera_name ) elif command == \"add_image\" : logger . info ( \"add_image requested.\" ) await add_image ( record ) else : logger . warning ( f \"Ignoring unknown command { command } \" )","title":"run_command()"}]}